---
interface Props {
    partOfSpeech: string;
    definition: string;
}

const { partOfSpeech, definition } = Astro.props;
const hasContent = Boolean(partOfSpeech || definition);
---

{hasContent && (
    <div class="word-description" role="contentinfo">
        <p class="word-description__text">
            {partOfSpeech && (
                <span class="word-description__type" aria-label={`Part of speech: ${partOfSpeech}`}>
                    {partOfSpeech}.
                </span>
            )}{definition}
        </p>
    </div>
)}

<style>
    .word-description {
        width: 100%;
        max-width: min(var(--content-width-small), 85%);
        margin: 0 auto;
        padding: var(--spacing-base) var(--spacing-large);
        background: hsl(0 0% 100% / 0.05);
        border-radius: var(--border-radius);
        box-shadow: 0 2px 4px -2px hsl(var(--shadow-color) / 0.1);
    }

    .word-description__text {
        margin: 0;
        font-style: italic;
        color: var(--color-text);
        line-height: 1.6;
        text-transform: lowercase;
        font-size: var(--font-size-base);
    }

    .word-description__type {
        color: var(--color-text-light);
        font-weight: 500;
    }
</style>
