---
import { getUrl } from '~utils/utils';
import type { Word as WordType } from '~/types/word';

interface Props {
    word: WordType;
}

const { word } = Astro.props;

const formatDate = (dateStr: string): string => {
    if (!dateStr) return '';

    const year = parseInt(dateStr.substring(0, 4));
    const month = parseInt(dateStr.substring(4, 6)) - 1;
    const day = parseInt(dateStr.substring(6, 8));

    const date = new globalThis.Date(year, month, day);
    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });
};

const formattedDate = formatDate(word.date);
---

<a href={getUrl(`/${word.date}`)} class="word-link" aria-label={`View ${word.word}${formattedDate ? ` from ${formattedDate}` : ''}`}>
    <span class="word-link__word">{word.word}</span>
    {formattedDate && <time class="word-link__date" datetime={word.date}>{formattedDate}</time>}
</a>

<style>
    .word-link {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-small);
        text-decoration: none;
        padding: 0.25rem 0;
        transition: opacity 0.2s ease;
    }

    .word-link:hover {
        opacity: 0.7;
    }

    .word-link__word {
        font-size: 1.1rem;
        font-weight: 500;
        color: var(--color-primary-light);
    }

    .word-link__date {
        font-size: 0.8rem;
        color: var(--color-text-lighter);
        text-transform: lowercase;
        font-weight: normal;
    }

    @media (min-width: 481px) {
        .word-link {
            flex-direction: row;
            justify-content: space-between;
            align-items: baseline;
        }

        .word-link__date {
            margin-left: 1rem;
        }
    }
</style>
